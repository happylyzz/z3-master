-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
1 internalized: 0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v0 1
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
1 0
------------------------------------------------
-------- [arith] add_const ../src/smt/theory_lra.cpp:260 ---------
add 1, var = 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
1.0 internalized: 0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v1 1.0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
1.0 1
------------------------------------------------
-------- [arith] add_const ../src/smt/theory_lra.cpp:260 ---------
add 1.0, var = 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
0 internalized: 0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v2 0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
0 2
------------------------------------------------
-------- [arith] add_const ../src/smt/theory_lra.cpp:260 ---------
add 0, var = 2
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
0.0 internalized: 0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v3 0.0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
0.0 3
------------------------------------------------
-------- [arith] add_const ../src/smt/theory_lra.cpp:260 ---------
add 0.0, var = 3
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:906 ---------
(>= (+ x y z) 4.0)
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1045 ---------
sort constraint: z
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1045 ---------
sort constraint: z
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v4 z
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
z 4
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1045 ---------
sort constraint: x
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1045 ---------
sort constraint: x
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v5 x
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
x 5
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1045 ---------
sort constraint: y
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1045 ---------
sort constraint: y
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v6 y
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
y 6
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
y internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
z internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
(+ x y z) internalized: 0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v7 (+ x y z)
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
(+ x y z) 7
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:789 ---------
(+ x y z) v7
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v7 0 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:906 ---------
(<= (+ x y z) 20.0)
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
z 4
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
x 5
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
y 6
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
y internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
z internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
(+ x y z) internalized: 1
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
(+ x y z) 7
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:789 ---------
(+ x y z) v7
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v7 1 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:906 ---------
(>= y 5.0)
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
y 6
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
y internalized: 1
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
y 6
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:789 ---------
y v6
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v6 0 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:906 ---------
(>= z 5.0)
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
z 4
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
z internalized: 1
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
z 4
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:789 ---------
z v4
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v4 0 += 1
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(>= (+ x y z) 4.0) true
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(<= (+ x y z) 20.0) true
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(>= y 5.0) true
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(>= z 5.0) true
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2492 ---------
flush bound axioms
------------------------------------------------
-------- [arith] mk_clause ../src/smt/theory_lra.cpp:564 ---------
(>= (+ x y z) 4.0)
(<= (+ x y z) 20.0)
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 1
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
4  <= v7
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 2
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
20  >= v7
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 3
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
5  <= v6
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 4
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
5  <= v4
------------------------------------------------
-------- [arith] propagate_bound ../src/smt/theory_lra.cpp:2644 ---------
v7 find_glb: 1 is_true: 1 k: <= is_lower: 1
------------------------------------------------
-------- [arith] propagate_bound ../src/smt/theory_lra.cpp:2644 ---------
v7 find_glb: 0 is_true: 1 k: >= is_lower: 0
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1565 ---------
Logical context:
scope-lvl: 0
base-lvl:  0
search-lvl:  0
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
#1 := true
#30 := 4.0
#25 := z
#24 := y
#23 := x
#26 := (+ x y z)
#31 := (>= #26 4.0)
#35 := 20.0
#36 := (<= #26 20.0)
#40 := 5.0
#41 := (>= y 5.0)
#43 := (>= z 5.0)
#2 := false
#45 := 1
#48 := 1.0
#49 := 0
#50 := 0.0
asserted formulas:
#31 #36 #41 #43 
current assignment:
#31: (>= (+ x y z) 4.0)
#36: (<= (+ x y z) 20.0)
#41: (>= y 5.0)
#43: (>= z 5.0)
expression -> bool_var:
(#1 -> true) (#31 -> 1) (#36 -> 2) (#41 -> 3) (#43 -> 4) 
expression -> enode:
(#1 -> e!0) (#2 -> e!1) (#45 -> e!2) (#48 -> e!3) (#49 -> e!4) (#50 -> e!5) (#25 -> e!6) (#23 -> e!7) (#24 -> e!8) (#26 -> e!9) 
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
j4 + j5 + j6
 -  j4 -  j5 -  j6 +  t7 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10   
heading  -1    -2    -3    -4    -5    -6    -7    0   
low  1    1    0    0    5        5    4   
upp  1    1    0    0                20   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
decl2enodes:
hot bool vars:
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1892 ---------
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2034 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1478 ---------
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
j4 + j5 + j6
 -  j4 -  j5 -  j6 +  t7 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10   
heading  -1    -2    -3    -4    -5    -6    -7    0   
low  1    1    0    0    5        5    4   
upp  1    1    0    0                20   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1471 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1427 ---------
update variable values 1
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
j4 + j5 + j6
 -  j4 -  j5 -  j6 +  t7 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10   
heading  -1    -2    -3    -4    -5    -6    -7    0   
low  1    1    0    0    5        5    4   
upp  1    1    0    0                20   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 0 := x
v6 j6 = 5 := y
v7 t7 = 10 := (+ x y z)
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
z := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
x := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
y := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
(+ x y z) := 10
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3240 ---------
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
j4 + j5 + j6
 -  j4 -  j5 -  j6 +  t7 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10   
heading  -1    -2    -3    -4    -5    -6    -7    0   
low  1    1    0    0    5        5    4   
upp  1    1    0    0                20   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 0 := x
v6 j6 = 5 := y
v7 t7 = 10 := (+ x y z)
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
z v4 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
x v5 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
y v6 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(+ x y z) v7 := 10
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1054 ---------
push
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1070 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1088 ---------
num scopes: 1 new scope level: 0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
x 5
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
(- 1.0) internalized: 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
(* (- 1.0) x) internalized: 0
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:601 ---------
fresh var: v8 (* (- 1.0) x)
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
(* (- 1.0) x) 8
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:789 ---------
(* -1.0 x) v8
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3632 ---------
v8
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
j4 + j5 + j6
 - j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10    0   
heading  -1    -2    -3    -4    -5    -6    -7    0    1   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20       

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, 0) base          [-oo, oo]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3545 ---------
 - j5
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3558 ---------
5: 5
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v8 0 += 1
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3653 ---------
internalized 5: (>= (* (- 1.0) x) 0.0)
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3658 ---------
(>= (* (- 1.0) x) 0.0)
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2492 ---------
flush bound axioms
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1054 ---------
push
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1054 ---------
push
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(>= (* (- 1.0) x) 0.0) false
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 5
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
0  <= v8
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1565 ---------
Logical context:
scope-lvl: 2
base-lvl:  1
search-lvl:  1
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
#1 := true
#30 := 4.0
#25 := z
#24 := y
#23 := x
#26 := (+ x y z)
#31 := (>= #26 4.0)
#35 := 20.0
#36 := (<= #26 20.0)
#40 := 5.0
#41 := (>= y 5.0)
#43 := (>= z 5.0)
#50 := 0.0
#46 := -1.0
#47 := (* -1.0 x)
#52 := (>= #47 0.0)
#2 := false
#45 := 1
#48 := 1.0
#49 := 0
asserted formulas:
#31 #36 #41 #43 
current assignment:
#31: (>= (+ x y z) 4.0)
#36: (<= (+ x y z) 20.0)
#41: (>= y 5.0)
#43: (>= z 5.0)
(not #52): (not (>= (* -1.0 x) 0.0))
expression -> bool_var:
(#1 -> true) (#31 -> 1) (#36 -> 2) (#41 -> 3) (#43 -> 4) (#52 -> 5) 
expression -> enode:
(#1 -> e!0) (#2 -> e!1) (#45 -> e!2) (#48 -> e!3) (#49 -> e!4) (#50 -> e!5) (#25 -> e!6) (#23 -> e!7) (#24 -> e!8) (#26 -> e!9) (#46 -> e!10) (#47 -> e!11) 
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -7    0    -6   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
decl2enodes:
hot bool vars:
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1892 ---------
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2034 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1478 ---------
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -7    0    -6   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1471 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1427 ---------
update variable values 1
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -7    0    -6   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 1/2 := x
v6 j6 = 5 := y
v7 t7 = 21/2 := (+ x y z)
v8 t8 = -1/2 := (* -1.0 x)
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
z := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
y := 5
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3240 ---------
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -7    0    -6   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 1/2 := x
v6 j6 = 5 := y
v7 t7 = 21/2 := (+ x y z)
v8 t8 = -1/2 := (* -1.0 x)
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
z v4 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
x v5 := 1/2
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
y v6 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(+ x y z) v7 := 21/2
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(* (- 1.0) x) v8 := -1/2
------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1427 ---------
update variable values 1
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 1/2 := x
v6 j6 = 5 := y
v7 t7 = 21/2 := (+ x y z)
v8 t8 = -1/2 := (* -1.0 x)
------------------------------------------------
-------- [arith] maximize ../src/smt/theory_lra.cpp:3484 ---------
OPTIMAL v8 vi: 2147483649
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 1/2 := x
v6 j6 = 5 := y
v7 t7 = 21/2 := (+ x y z)
v8 t8 = -1/2 := (* -1.0 x)
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1565 ---------
Logical context:
scope-lvl: 2
base-lvl:  1
search-lvl:  1
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
#1 := true
#30 := 4.0
#25 := z
#24 := y
#23 := x
#26 := (+ x y z)
#31 := (>= #26 4.0)
#35 := 20.0
#36 := (<= #26 20.0)
#40 := 5.0
#41 := (>= y 5.0)
#43 := (>= z 5.0)
#50 := 0.0
#46 := -1.0
#47 := (* -1.0 x)
#52 := (>= #47 0.0)
#2 := false
#45 := 1
#48 := 1.0
#49 := 0
asserted formulas:
#31 #36 #41 #43 
current assignment:
#31: (>= (+ x y z) 4.0)
#36: (<= (+ x y z) 20.0)
#41: (>= y 5.0)
#43: (>= z 5.0)
(not #52): (not (>= (* -1.0 x) 0.0))
expression -> bool_var:
(#1 -> true) (#31 -> 1) (#36 -> 2) (#41 -> 3) (#43 -> 4) (#52 -> 5) 
expression -> enode:
(#1 -> e!0) (#2 -> e!1) (#45 -> e!2) (#48 -> e!3) (#49 -> e!4) (#50 -> e!5) (#25 -> e!6) (#23 -> e!7) (#24 -> e!8) (#26 -> e!9) (#46 -> e!10) (#47 -> e!11) 
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
decl2enodes:
hot bool vars:
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1892 ---------
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2034 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1478 ---------
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1471 ---------

------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1070 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1088 ---------
num scopes: 1 new scope level: 1
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1054 ---------
push
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3632 ---------
v8
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20       

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, oo]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3545 ---------
 - j5
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3558 ---------
5: 5
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v8 1 += 1
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3653 ---------
internalized 6: (>= (* (- 1.0) x) (- (/ 1.0 2.0)))
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3658 ---------
(>= (* (- 1.0) x) (- (/ 1.0 2.0)))
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:906 ---------
(<= x (/ 1.0 2.0))
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
x 5
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
x 5
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:789 ---------
x v5
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v5 0 += 1
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(<= x (/ 1.0 2.0)) true
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2492 ---------
flush bound axioms
------------------------------------------------
-------- [arith] mk_clause ../src/smt/theory_lra.cpp:564 ---------
(>= (* -1.0 x) -1/2)
(not (>= (* -1.0 x) 0.0))
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 7
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
1/2  >= v5
------------------------------------------------
-------- [arith] is_bound_implied ../src/smt/theory_lra.cpp:2346 ---------
b.get_value() <= value <= v => b.get_value() <= v 
------------------------------------------------
-------- [arith] propagate_lp_solver_bound ../src/smt/theory_lra.cpp:2197 ---------
v8 >= -1/2
------------------------------------------------
-------- [arith] is_bound_implied ../src/smt/theory_lra.cpp:2346 ---------
b.get_value() <= value <= v => b.get_value() <= v 
------------------------------------------------
-------- [arith] propagate_lp_solver_bound ../src/smt/theory_lra.cpp:2217 ---------
6 bound: -1/2  <= v8 first: 1
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v8 2 += -1
------------------------------------------------
-------- [arith] propagate_lp_solver_bound ../src/smt/theory_lra.cpp:2235 ---------
(<= x 1/2)
 --> (>= (* -1.0 x) -1/2)
(<= x (/ 1.0 2.0)) l_true
1: j5 <= 1/2
implied bound
it is a term number 1
 - j5 >= -1/2
end of implied bound
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(>= (* (- 1.0) x) (- (/ 1.0 2.0))) true
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 6
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
-1/2  <= v8
------------------------------------------------
-------- [arith] propagate_bound ../src/smt/theory_lra.cpp:2644 ---------
v8 find_glb: 1 is_true: 1 k: <= is_lower: 1
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1054 ---------
push
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(>= (* (- 1.0) x) 0.0) false
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 5
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
0  <= v8
------------------------------------------------
-------- [arith] propagate_bound ../src/smt/theory_lra.cpp:2644 ---------
v8 find_glb: 0 is_true: 0 k: <= is_lower: 1
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1565 ---------
Logical context:
scope-lvl: 3
base-lvl:  2
search-lvl:  2
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
#1 := true
#30 := 4.0
#25 := z
#24 := y
#23 := x
#26 := (+ x y z)
#31 := (>= #26 4.0)
#35 := 20.0
#36 := (<= #26 20.0)
#40 := 5.0
#41 := (>= y 5.0)
#43 := (>= z 5.0)
#50 := 0.0
#46 := -1.0
#47 := (* -1.0 x)
#52 := (>= #47 0.0)
#55 := -1/2
#56 := (>= #47 -1/2)
#53 := 1/2
#57 := (<= x 1/2)
#2 := false
#45 := 1
#48 := 1.0
#49 := 0
asserted formulas:
#31 #36 #41 #43 #57 
current assignment:
#31: (>= (+ x y z) 4.0)
#36: (<= (+ x y z) 20.0)
#41: (>= y 5.0)
#43: (>= z 5.0)
#57: (<= x 1/2)
#56: (>= (* -1.0 x) -1/2)
(not #52): (not (>= (* -1.0 x) 0.0))
expression -> bool_var:
(#1 -> true) (#31 -> 1) (#36 -> 2) (#41 -> 3) (#43 -> 4) (#52 -> 5) (#56 -> 6) (#57 -> 7) 
expression -> enode:
(#1 -> e!0) (#2 -> e!1) (#45 -> e!2) (#48 -> e!3) (#49 -> e!4) (#50 -> e!5) (#25 -> e!6) (#23 -> e!7) (#24 -> e!8) (#26 -> e!9) (#46 -> e!10) (#47 -> e!11) 
number of constraints = 22
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
(18)  - j5 >= -1/2
(20) j5 <= 1/2
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4    -0.5   
upp  1    1    0    0        0.5        20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, (1/2, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [(-1/2, 0), (0, -1)]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
decl2enodes:
hot bool vars:
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1892 ---------
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2034 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1478 ---------
number of constraints = 22
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
(18)  - j5 >= -1/2
(20) j5 <= 1/2
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4    -0.5   
upp  1    1    0    0        0.5        20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, (1/2, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [(-1/2, 0), (0, -1)]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1471 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1427 ---------
update variable values 1
number of constraints = 22
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
(18)  - j5 >= -1/2
(20) j5 <= 1/2
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4    -0.5   
upp  1    1    0    0        0.5        20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, (1/2, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [(-1/2, 0), (0, -1)]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 1/2 := x
v6 j6 = 5 := y
v7 t7 = 21/2 := (+ x y z)
v8 t8 = -1/2 := (* -1.0 x)
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
z := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
y := 5
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3240 ---------
number of constraints = 22
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
(18)  - j5 >= -1/2
(20) j5 <= 1/2
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4    -0.5   
upp  1    1    0    0        0.5        20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, (1/2, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [(-1/2, 0), (0, -1)]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 1/2 := x
v6 j6 = 5 := y
v7 t7 = 21/2 := (+ x y z)
v8 t8 = -1/2 := (* -1.0 x)
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
z v4 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
x v5 := 1/2
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
y v6 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(+ x y z) v7 := 21/2
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(* (- 1.0) x) v8 := -1/2
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1070 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1088 ---------
num scopes: 1 new scope level: 2
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1070 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1088 ---------
num scopes: 1 new scope level: 1
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1054 ---------
push
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(>= (* (- 1.0) x) 0.0) false
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 5
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
0  <= v8
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1565 ---------
Logical context:
scope-lvl: 2
base-lvl:  1
search-lvl:  1
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
#1 := true
#30 := 4.0
#25 := z
#24 := y
#23 := x
#26 := (+ x y z)
#31 := (>= #26 4.0)
#35 := 20.0
#36 := (<= #26 20.0)
#40 := 5.0
#41 := (>= y 5.0)
#43 := (>= z 5.0)
#50 := 0.0
#46 := -1.0
#47 := (* -1.0 x)
#52 := (>= #47 0.0)
#2 := false
#45 := 1
#48 := 1.0
#49 := 0
asserted formulas:
#31 #36 #41 #43 
current assignment:
#31: (>= (+ x y z) 4.0)
#36: (<= (+ x y z) 20.0)
#41: (>= y 5.0)
#43: (>= z 5.0)
(not #52): (not (>= (* -1.0 x) 0.0))
expression -> bool_var:
(#1 -> true) (#31 -> 1) (#36 -> 2) (#41 -> 3) (#43 -> 4) (#52 -> 5) 
expression -> enode:
(#1 -> e!0) (#2 -> e!1) (#45 -> e!2) (#48 -> e!3) (#49 -> e!4) (#50 -> e!5) (#25 -> e!6) (#23 -> e!7) (#24 -> e!8) (#26 -> e!9) (#46 -> e!10) (#47 -> e!11) 
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
decl2enodes:
hot bool vars:
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1892 ---------
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2034 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1478 ---------
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1471 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1427 ---------
update variable values 1
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 1/2 := x
v6 j6 = 5 := y
v7 t7 = 21/2 := (+ x y z)
v8 t8 = -1/2 := (* -1.0 x)
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
z := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
y := 5
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3240 ---------
number of constraints = 18
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(17)  - j5 < 0
j4 + j5 + j6
 - j5
 -  j4 -  j6 +  t7 +  t8 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0.001    5    10.001    -0.001   
heading  -1    -2    -3    -4    -5    1    -6    0    -7   
low  1    1    0    0    5        5    4       
upp  1    1    0    0                20    -0.001   

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 1) base          [-oo, oo]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 1) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, -1)              [-oo, (0, -1)]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 1/2 := x
v6 j6 = 5 := y
v7 t7 = 21/2 := (+ x y z)
v8 t8 = -1/2 := (* -1.0 x)
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
z v4 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
x v5 := 1/2
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
y v6 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(+ x y z) v7 := 21/2
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(* (- 1.0) x) v8 := -1/2
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1070 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1088 ---------
num scopes: 1 new scope level: 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:906 ---------
(<= x 0.0)
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
x 5
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:548 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_var ../src/smt/theory_lra.cpp:610 ---------
x 5
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:789 ---------
x v5
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v5 0 += 1
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(<= x 0.0) true
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2492 ---------
flush bound axioms
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 6
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
0  >= v5
------------------------------------------------
-------- [arith] is_bound_implied ../src/smt/theory_lra.cpp:2346 ---------
b.get_value() <= value <= v => b.get_value() <= v 
------------------------------------------------
-------- [arith] propagate_lp_solver_bound ../src/smt/theory_lra.cpp:2197 ---------
v8 >= 0
------------------------------------------------
-------- [arith] is_bound_implied ../src/smt/theory_lra.cpp:2346 ---------
b.get_value() <= value <= v => b.get_value() <= v 
------------------------------------------------
-------- [arith] propagate_lp_solver_bound ../src/smt/theory_lra.cpp:2217 ---------
5 bound: 0  <= v8 first: 1
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:735 ---------
v8 1 += -1
------------------------------------------------
-------- [arith] propagate_lp_solver_bound ../src/smt/theory_lra.cpp:2235 ---------
(<= x 0.0)
 --> (>= (* -1.0 x) 0.0)
(<= x 0.0) l_true
1: j5 <= 0
implied bound
it is a term number 1
 - j5 >= 0
end of implied bound
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:1000 ---------
(>= (* (- 1.0) x) 0.0) true
------------------------------------------------
-------- [arith] propagate ../src/smt/theory_lra.cpp:2101 ---------
propagate: 5
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2866 ---------
0  <= v8
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1565 ---------
Logical context:
scope-lvl: 1
base-lvl:  1
search-lvl:  1
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
#1 := true
#30 := 4.0
#25 := z
#24 := y
#23 := x
#26 := (+ x y z)
#31 := (>= #26 4.0)
#35 := 20.0
#36 := (<= #26 20.0)
#40 := 5.0
#41 := (>= y 5.0)
#43 := (>= z 5.0)
#50 := 0.0
#46 := -1.0
#47 := (* -1.0 x)
#52 := (>= #47 0.0)
#56 := (<= x 0.0)
#2 := false
#45 := 1
#48 := 1.0
#49 := 0
asserted formulas:
#31 #36 #41 #43 #56 
current assignment:
#31: (>= (+ x y z) 4.0)
#36: (<= (+ x y z) 20.0)
#41: (>= y 5.0)
#43: (>= z 5.0)
#56: (<= x 0.0)
#52: (>= (* -1.0 x) 0.0)
expression -> bool_var:
(#1 -> true) (#31 -> 1) (#36 -> 2) (#41 -> 3) (#43 -> 4) (#52 -> 5) (#56 -> 6) 
expression -> enode:
(#1 -> e!0) (#2 -> e!1) (#45 -> e!2) (#48 -> e!3) (#49 -> e!4) (#50 -> e!5) (#25 -> e!6) (#23 -> e!7) (#24 -> e!8) (#26 -> e!9) (#46 -> e!10) (#47 -> e!11) 
number of constraints = 20
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(16)  - j5 >= 0
(18) j5 <= 0
j4 + j5 + j6
 - j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10    0   
heading  -1    -2    -3    -4    -5    -7    -6    0    1   
low  1    1    0    0    5        5    4    0   
upp  1    1    0    0        0        20       

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, (0, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, 0) base          [(0, 0), oo]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
decl2enodes:
hot bool vars:
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1892 ---------
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2034 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1478 ---------
number of constraints = 20
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(16)  - j5 >= 0
(18) j5 <= 0
j4 + j5 + j6
 - j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10    0   
heading  -1    -2    -3    -4    -5    -7    -6    0    1   
low  1    1    0    0    5        5    4    0   
upp  1    1    0    0        0        20       

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, (0, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, 0) base          [(0, 0), oo]
- j5
v0 j0, int := 1
v1 j1 := 1.0
v2 j2, int := 0
v3 j3 := 0.0
v4 j4 := z
v5 j5 := x
v6 j6 := y
v7 t7 := (+ x y z)
v8 t8 := (* -1.0 x)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1471 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1427 ---------
update variable values 1
number of constraints = 20
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(16)  - j5 >= 0
(18) j5 <= 0
j4 + j5 + j6
 - j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10    0   
heading  -1    -2    -3    -4    -5    -7    -6    0    1       //basis_heading is the basis heading of the solver owning trace_of_basis_change
// here we compact the trace as we go to avoid unnecessary column changes
low  1    1    0    0    5        5    4    0   
upp  1    1    0    0        0        20       

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, (0, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, 0) base          [(0, 0), oo]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 0 := x
v6 j6 = 5 := y
v7 t7 = 10 := (+ x y z)
v8 t8 = 0 := (* -1.0 x)
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
z := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
x := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
y := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
(+ x y z) := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3308 ---------
(* (- 1.0) x) := 0
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3240 ---------
number of constraints = 20
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(16)  - j5 >= 0
(18) j5 <= 0
j4 + j5 + j6
 - j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j5 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10    0   
heading  -1    -2    -3    -4    -5    -7    -6    0    1   
low  1    1    0    0    5        5    4    0   
upp  1    1    0    0        0        20       

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0)               [-oo, (0, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, 0) base          [(0, 0), oo]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 0 := x
v6 j6 = 5 := y
v7 t7 = 10 := (+ x y z)
v8 t8 = 0 := (* -1.0 x)
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
z v4 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
x v5 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
y v6 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(+ x y z) v7 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3296 ---------
(* (- 1.0) x) v8 := 0
------------------------------------------------
-------- [arith] maximize ../src/smt/theory_lra.cpp:3498 ---------
UNBOUNDED v8 vi: 2147483649
number of constraints = 20
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j6 >= 5
(14) j4 >= 5
(16)  - j5 >= 0
(18) j5 <= 0
j4 + j5 + j6
 - j5
 +  j4 +  j5 +  j6 -  t7 = 0
 -  j4 -  j6 +  t7 +  t8 = 0
----------------------
costs = 0
x*  1    1    0    0    5    0    5    10    0   
heading  -1    -2    -3    -4    -5    0    -6    -7    1   
low  1    1    0    0    5        5    4    0   
upp  1    1    0    0        0        20       

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (5, 0)               [(5, 0), oo]
[5]    := (0, 0) base          [-oo, (0, 0)]
[6]    := (5, 0)               [(5, 0), oo]
[7]    := (10, 0)              [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (0, 0) base          [(0, 0), oo]
- j5
v0 j0 = 1, int := 1
v1 j1 = 1 := 1.0
v2 j2 = 0, int := 0
v3 j3 = 0 := 0.0
v4 j4 = 5 := z
v5 j5 = 0 := x
v6 j6 = 5 := y
v7 t7 = 10 := (+ x y z)
v8 t8 = 0 := (* -1.0 x)
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1070 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1088 ---------
num scopes: 1 new scope level: 0
------------------------------------------------
