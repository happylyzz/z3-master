-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
1 internalized: 0
------------------------------------------------
-------- [arith] add_const ../src/smt/theory_lra.cpp:259 ---------
add 1, var = 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
1.0 internalized: 0
------------------------------------------------
-------- [arith] add_const ../src/smt/theory_lra.cpp:259 ---------
add 1.0, var = 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
0 internalized: 0
------------------------------------------------
-------- [arith] add_const ../src/smt/theory_lra.cpp:259 ---------
add 0, var = 2
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
0.0 internalized: 0
------------------------------------------------
-------- [arith] add_const ../src/smt/theory_lra.cpp:259 ---------
add 0.0, var = 3
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(>= (+ x y z) 4)
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: z
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: z
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: x
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: x
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: y
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: y
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
y internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
z internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(+ x y z) internalized: 0
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(+ x y z) v7
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v7 0 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(<= (+ x y z) 20)
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
y internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
z internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(+ x y z) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(+ x y z) v7
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v7 1 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(>= z 10)
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
z internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
z v4
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v4 0 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(<= (+ (mod x 5) (* (- 1) |(mod x 5)!1|)) 0)
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: |(mod x 5)!1|
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: |(mod x 5)!1|
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
5 internalized: 0
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
5 v9
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: 5
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
|(mod x 5)!1| internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(- 1) internalized: 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(* (- 1) |(mod x 5)!1|) internalized: 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) internalized: 0
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(+ (mod x 5) (* -1 (mod x 5)!1)) v11
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v11 0 += 1
------------------------------------------------
-------- [arith] mk_idiv_mod_axioms ../src/smt/theory_lra.cpp:1202 ---------
x 5
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
5 internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(* 5 (div x 5)) internalized: 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(+ (* 5 (div x 5)) (mod x 5)) internalized: 0
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(+ (* 5 (div x 5)) (mod x 5)) v13
------------------------------------------------
-------- [arith] apply_sort_cnstr ../src/smt/theory_lra.cpp:1037 ---------
sort constraint: (+ (* 5 (div x 5)) (mod x 5))
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (<= (+ x a!1) 0))
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
5 internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(* 5 (div x 5)) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(+ (* 5 (div x 5)) (mod x 5)) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(- 1) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(* (- 1) (+ (* 5 (div x 5)) (mod x 5))) internalized: 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) internalized: 0
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(+ x (* -1 (+ #49 #34))) v14
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v14 0 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (>= (+ x a!1) 0))
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
5 internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(* 5 (div x 5)) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(+ (* 5 (div x 5)) (mod x 5)) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(- 1) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(* (- 1) (+ (* 5 (div x 5)) (mod x 5))) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(+ x (* -1 (+ #49 #34))) v14
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v14 1 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(>= (mod x 5) 0)
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(mod x 5) v10
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v10 0 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(<= (mod x 5) 4)
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(mod x 5) v10
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v10 1 += 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(>= (+ (mod x 5) (* (- 1) |(mod x 5)!1|)) 0)
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(mod x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
|(mod x 5)!1| internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(- 1) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(* (- 1) |(mod x 5)!1|) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(+ (mod x 5) (* -1 (mod x 5)!1)) v11
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v11 1 += 1
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(>= (+ x y z) 4) 1
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(<= (+ x y z) 20) 2
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(>= z 10) 3
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(<= (+ (mod x 5) (* (- 1) |(mod x 5)!1|)) 0) 4
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(>= (mod x 5) 0) 8
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(<= (mod x 5) 4) 9
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(>= (+ (mod x 5) (* (- 1) |(mod x 5)!1|)) 0) 10
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (>= (+ x a!1) 0)) 7
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (<= (+ x a!1) 0)) 6
------------------------------------------------
-------- [arith] new_eq_eh ../src/smt/theory_lra.cpp:1020 ---------
eq 13 == 5
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2503 ---------
flush bound axioms
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2519 ---------
0  <= v11
0  >= v11
------------------------------------------------
-------- [arith] mk_clause ../src/smt/theory_lra.cpp:566 ---------
(>= (+ (mod x 5) (* -1 (mod x 5)!1)) 0)
(<= (+ (mod x 5) (* -1 (mod x 5)!1)) 0)
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2519 ---------
0  <= v10
4  >= v10
------------------------------------------------
-------- [arith] mk_clause ../src/smt/theory_lra.cpp:566 ---------
(>= (mod x 5) 0)
(<= (mod x 5) 4)
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2519 ---------
0  >= v14
0  <= v14
------------------------------------------------
-------- [arith] mk_clause ../src/smt/theory_lra.cpp:566 ---------
(<= (+ x (* -1 #50)) 0)
(>= (+ x (* -1 #50)) 0)
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2519 ---------
20  >= v7
4  <= v7
------------------------------------------------
-------- [arith] mk_clause ../src/smt/theory_lra.cpp:566 ---------
(>= (+ x y z) 4)
(<= (+ x y z) 20)
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 1
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
4  <= v7
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 2
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
20  >= v7
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 3
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
10  <= v4
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 4
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
0  >= v11
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 8
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
0  <= v10
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 9
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
4  >= v10
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 10
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
0  <= v11
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 7
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
0  <= v14
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 6
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
0  >= v14
------------------------------------------------
-------- [arith] add_eq ../src/smt/theory_lra.cpp:2315 ---------
add-eq (mod x 5) == |(mod x 5)!1| 34 == 36
------------------------------------------------
-------- [arith] assign_eq ../src/smt/theory_lra.cpp:3088 ---------
0 4 (<= (+ (mod x 5) (* -1 (mod x 5)!1)) 0)
0 10 (>= (+ (mod x 5) (* -1 (mod x 5)!1)) 0)
 ==> (mod x 5) = |(mod x 5)!1|
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1568 ---------
Theory arithmetic:
number of constraints = 28
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1899 ---------
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(div x 5) v12
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
x v5
------------------------------------------------
-------- [arith] check_idiv_bounds ../src/smt/theory_lra.cpp:1753 ---------
unbounded (div x 5)
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2047 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1486 ---------
Theory arithmetic:
number of constraints = 28
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1479 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1435 ---------
update variable values 1
Theory arithmetic:
number of constraints = 28
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
z := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
x := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
y := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ x y z) := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
|(mod x 5)!1| := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
5 := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(mod x 5) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(div x 5) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ (* 5 (div x 5)) (mod x 5)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) := 0
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3265 ---------
Theory arithmetic:
number of constraints = 28
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
1 v0 := 1
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
1.0 v1 := 1
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
0 v2 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
0.0 v3 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
z v4 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
y v6 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ x y z) v7 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
|(mod x 5)!1| v8 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
5 v9 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) v11 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(div x 5) v12 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ (* 5 (div x 5)) (mod x 5)) v13 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) v14 := 0
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1046 ---------
push
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1060 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1076 ---------
num scopes: 1 new scope level: 0
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
|(mod x 5)!1| internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(- 1) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(* (- 1) |(mod x 5)!1|) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(* -1 (mod x 5)!1) v15
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3652 ---------
v15
Theory arithmetic:
number of constraints = 28
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j9 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3565 ---------
 - j9
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3578 ---------
9: 8
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v15 0 += 1
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3673 ---------
internalized 11: (>= (* (- 1) |(mod x 5)!1|) 0)
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3678 ---------
(>= (* (- 1) |(mod x 5)!1|) 0)
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2503 ---------
flush bound axioms
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1046 ---------
push
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1046 ---------
push
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1568 ---------
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j9 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1899 ---------
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(div x 5) v12
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
x v5
------------------------------------------------
-------- [arith] check_idiv_bounds ../src/smt/theory_lra.cpp:1753 ---------
unbounded (div x 5)
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2047 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1486 ---------
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j9 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1479 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1435 ---------
update variable values 1
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j9 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15 = 0, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
z := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
x := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
y := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ x y z) := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
|(mod x 5)!1| := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
5 := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(mod x 5) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(div x 5) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ (* 5 (div x 5)) (mod x 5)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(* (- 1) |(mod x 5)!1|) := 0
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3265 ---------
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j9 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0)               [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0) base          [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15 = 0, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
1 v0 := 1
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
1.0 v1 := 1
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
0 v2 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
0.0 v3 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
z v4 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
y v6 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ x y z) v7 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
|(mod x 5)!1| v8 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
5 v9 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(* (- 1) |(mod x 5)!1|) v15 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) v11 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(div x 5) v12 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ (* 5 (div x 5)) (mod x 5)) v13 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) v14 := 0
------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1435 ---------
update variable values 1
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15 = 0, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] maximize ../src/smt/theory_lra.cpp:3509 ---------
OPTIMAL v15 vi: 2147483652
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15 = 0, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1568 ---------
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1899 ---------
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(div x 5) v12
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
x v5
------------------------------------------------
-------- [arith] check_idiv_bounds ../src/smt/theory_lra.cpp:1753 ---------
unbounded (div x 5)
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2047 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1486 ---------
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1479 ---------

------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1060 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1076 ---------
num scopes: 1 new scope level: 1
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1046 ---------
push
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3652 ---------
v15
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3565 ---------
 - j9
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3578 ---------
9: 8
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3678 ---------
(>= (* (- 1) |(mod x 5)!1|) 0)
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(<= |(mod x 5)!1| 0)
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
|(mod x 5)!1| internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(mod x 5)!1 v8
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v8 0 += 1
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(<= |(mod x 5)!1| 0) 12
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2503 ---------
flush bound axioms
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 12
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
0  >= v8
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1046 ---------
push
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1568 ---------
Theory arithmetic:
number of constraints = 32
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
(30) j9 <= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, (0, 0)]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1899 ---------
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(div x 5) v12
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
x v5
------------------------------------------------
-------- [arith] check_idiv_bounds ../src/smt/theory_lra.cpp:1753 ---------
unbounded (div x 5)
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2047 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1486 ---------
Theory arithmetic:
number of constraints = 32
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
(30) j9 <= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, (0, 0)]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1479 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1435 ---------
update variable values 1
Theory arithmetic:
number of constraints = 32
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
(30) j9 <= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, (0, 0)]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15 = 0, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
z := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
x := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
y := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ x y z) := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
|(mod x 5)!1| := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
5 := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(mod x 5) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(div x 5) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ (* 5 (div x 5)) (mod x 5)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(* (- 1) |(mod x 5)!1|) := 0
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3265 ---------
Theory arithmetic:
number of constraints = 32
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
(30) j9 <= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, (0, 0)]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15 = 0, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
1 v0 := 1
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
1.0 v1 := 1
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
0 v2 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
0.0 v3 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
z v4 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
y v6 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ x y z) v7 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
|(mod x 5)!1| v8 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
5 v9 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(* (- 1) |(mod x 5)!1|) v15 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) v11 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(div x 5) v12 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ (* 5 (div x 5)) (mod x 5)) v13 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) v14 := 0
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1060 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1076 ---------
num scopes: 1 new scope level: 2
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1060 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1076 ---------
num scopes: 1 new scope level: 1
------------------------------------------------
-------- [arith] push_scope_eh ../src/smt/theory_lra.cpp:1046 ---------
push
------------------------------------------------
-------- [arith] final_check_eh ../src/smt/theory_lra.cpp:1568 ---------
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] check_lia ../src/smt/theory_lra.cpp:1899 ---------
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
(div x 5) internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(div x 5) v12
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
x internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
x v5
------------------------------------------------
-------- [arith] check_idiv_bounds ../src/smt/theory_lra.cpp:1753 ---------
unbounded (div x 5)
------------------------------------------------
-------- [arith] check_nla ../src/smt/theory_lra.cpp:2047 ---------
no nla
------------------------------------------------
-------- [arith] assume_eqs ../src/smt/theory_lra.cpp:1486 ---------
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] random_update ../src/smt/theory_lra.cpp:1479 ---------

------------------------------------------------
-------- [arith] init_variable_values ../src/smt/theory_lra.cpp:1435 ---------
update variable values 1
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15 = 0, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
1 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
1.0 := 1
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
0.0 := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
z := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
x := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
y := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ x y z) := 10
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
|(mod x 5)!1| := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
5 := 5
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(mod x 5) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(div x 5) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(+ (* 5 (div x 5)) (mod x 5)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) := 0
------------------------------------------------
-------- [arith] get_value ../src/smt/theory_lra.cpp:3333 ---------
(* (- 1) |(mod x 5)!1|) := 0
------------------------------------------------
-------- [arith] init_model ../src/smt/theory_lra.cpp:3265 ---------
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0 = 1, int := 45: 1
irr: v1 j1 = 1 := 46: 1.0
v2 j2 = 0, int := 42: 0
irr: v3 j3 = 0 := 47: 0.0
v4 j4 = 10, int := 25: z
v5 j5 = 0, int := 23: x
v6 j6 = 0, int := 24: y
v7 t7 = 10, int := 26: (+ x y z)
v8 j9 = 0, int := 36: (mod x 5)!1
v9 j8 = 5, int := 33: 5
v10 j10 = 0, int := 34: (mod x 5)
v11 t11 = 0, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12 = 0, int := 48: (div x 5)
v13 t13 = 0, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14 = 0, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15 = 0, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
1 v0 := 1
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
1.0 v1 := 1
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
0 v2 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
0.0 v3 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
z v4 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
y v6 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ x y z) v7 := 10
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
|(mod x 5)!1| v8 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
5 v9 := 5
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(* (- 1) |(mod x 5)!1|) v15 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ (mod x 5) (* (- 1) |(mod x 5)!1|)) v11 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(div x 5) v12 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(+ (* 5 (div x 5)) (mod x 5)) v13 := 0
------------------------------------------------
-------- [arith] mk_value ../src/smt/theory_lra.cpp:3321 ---------
(let ((a!1 (* (- 1) (+ (* 5 (div x 5)) (mod x 5)))))
  (+ x a!1)) v14 := 0
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1060 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1076 ---------
num scopes: 1 new scope level: 1
------------------------------------------------
-------- [arith] internalize_atom ../src/smt/theory_lra.cpp:918 ---------
(<= |(mod x 5)!1| (- 1))
------------------------------------------------
-------- [arith] mk_enode ../src/smt/theory_lra.cpp:546 ---------
|(mod x 5)!1| internalized: 1
------------------------------------------------
-------- [arith] internalize_linearized_def ../src/smt/theory_lra.cpp:804 ---------
(mod x 5)!1 v8
------------------------------------------------
-------- [arith] updt_unassigned_bounds ../src/smt/theory_lra.cpp:750 ---------
v8 0 += 1
------------------------------------------------
-------- [arith] assign_eh ../src/smt/theory_lra.cpp:992 ---------
(<= |(mod x 5)!1| (- 1)) 12
------------------------------------------------
-------- [arith] flush_bound_axioms ../src/smt/theory_lra.cpp:2503 ---------
flush bound axioms
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2131 ---------
propagate: 12
------------------------------------------------
-------- [arith] assert_bound ../src/smt/theory_lra.cpp:2873 ---------
-1  >= v8
------------------------------------------------
-------- [arith] propagate_core ../src/smt/theory_lra.cpp:2147 ---------
propagation conflict
------------------------------------------------
-------- [arith] set_conflict_or_lemma ../src/smt/theory_lra.cpp:3198 ---------
lemma scope: 1
(<= |(mod x 5)!1| (- 1)) l_true
(>= (mod x 5) 0) l_true
(<= (+ (mod x 5) (* (- 1) |(mod x 5)!1|)) 0) l_true
1: j9 <= -1
-1: j10 >= 0
1:  - j9 + j10 <= 0
is-conflict: 1
Theory arithmetic:
number of constraints = 32
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
(30) j9 <= -1
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

inf columns: 9 
[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, (-1, 0)]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1060 ---------
pop 1
------------------------------------------------
-------- [arith] pop_scope_eh ../src/smt/theory_lra.cpp:1076 ---------
num scopes: 1 new scope level: 0
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3652 ---------
v15
Theory arithmetic:
number of constraints = 30
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 + j5 + j6 >= 4
(10) j4 + j5 + j6 <= 20
(12) j4 >= 10
(14) j8 >= 5
(15) j8 <= 5
(16)  - j9 + j10 <= 0
(18)  - j10 - 5j12 + j5 <= 0
(20)  - j10 - 5j12 + j5 >= 0
(22) j10 >= 0
(24) j10 <= 4
(26)  - j9 + j10 >= 0
j4 + j5 + j6
 - j9 + j10
j10 + 5j12
 - j10 - 5j12 + j5
 - j9
 -  j4 -  j5 -  j6 +  t7 = 0
 +  j9 -  j10 = 0
 -  j10 -  5j12 +  t13 = 0
 -  j5 +  j10 +  5j12 = 0
 +  j10 +  t15 = 0

[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (10, 0)              [(10, 0), oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0)               [-oo, oo]
[7]    := (10, 0) base         [(4, 0), (20, 0)]
j4 + j5 + j6
[8]    := (5, 0)               [(5, 0), (5, 0)]
[9]    := (0, 0) base          [-oo, oo]
[10]    := (0, 0)               [(0, 0), (4, 0)]
[11]    := (0, 0)               [(0, 0), (0, 0)]
- j9 + j10
[12]    := (0, 0)               [-oo, oo]
[13]    := (0, 0) base          [-oo, oo]
j10 + 5j12
[14]    := (0, 0) base          [(0, 0), (0, 0)]
- j10 - 5j12 + j5
[15]    := (0, 0) base          [-oo, oo]
- j9
irr: v0 j0, int := 45: 1
irr: v1 j1 := 46: 1.0
v2 j2, int := 42: 0
irr: v3 j3 := 47: 0.0
v4 j4, int := 25: z
v5 j5, int := 23: x
v6 j6, int := 24: y
v7 t7, int := 26: (+ x y z)
v8 j9, int := 36: (mod x 5)!1
v9 j8, int := 33: 5
v10 j10, int := 34: (mod x 5)
v11 t11, int := 44: (+ (mod x 5) (* -1 (mod x 5)!1))
v12 j12, int := 48: (div x 5)
v13 t13, int := 50: (+ (* 5 (div x 5)) (mod x 5))
v14 t14, int := 53: (+ x (* -1 (+ #49 #34)))
v15 t15, int := 41: (* -1 (mod x 5)!1)
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3565 ---------
 - j9
------------------------------------------------
-------- [arith] term2coeffs ../src/smt/theory_lra.cpp:3578 ---------
9: 8
------------------------------------------------
-------- [arith] mk_ge ../src/smt/theory_lra.cpp:3678 ---------
(>= (* (- 1) |(mod x 5)!1|) 0)
------------------------------------------------
